services:
  editorial-service:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8040:8040"
      - "9040:9090"  # Metrics port
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
      - SERVICE_PORT=8040
      - SERVICE_HOST=editorial-service
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=8000
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
      - PYTHONPATH=/app
    volumes:
      - ./src:/app/src:ro
      - ./tests:/app/tests:ro
      - ./config:/app/config:ro
    networks:
      - vector-wave-dev
    depends_on:
      chromadb:
        condition: service_started
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8040/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    
  chromadb:
    image: chromadb/chroma:latest
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/data
    networks:
      - vector-wave-dev
    healthcheck:
      test: ["CMD", "bash", "-lc", "exec 3<>/dev/tcp/localhost/8000; printf 'GET /api/v2/heartbeat\r\n\r\n' >&3; timeout 2 cat <&3 | grep -q '200 OK'"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vector-wave-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  chromadb_data:
  redis_data:

networks:
  vector-wave-dev:
    driver: bridge