version: '3.8'

services:
  editorial-service:
    image: vector-wave/editorial-service:2.0.0
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8040:8040"
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=info  
      - SERVICE_HOST=editorial-service
      - SERVICE_PORT=8040
      - CORS_ORIGINS=${CORS_ORIGINS:-https://vectorwave.io}
      # Vector Wave ecosystem services
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=8000
      - REDIS_URL=redis://redis:6379
      # Observability
      - JAEGER_HOST=${JAEGER_HOST:-jaeger}
      - JAEGER_PORT=${JAEGER_PORT:-14268}
      - PROMETHEUS_ENABLED=true
      # Security
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - CHROMADB_TOKEN=${CHROMADB_TOKEN}
    secrets:
      - redis_password
      - chromadb_token
    networks:
      - vector-wave-shared
    depends_on:
      chromadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
      restart_policy:
        condition: on-failure
        max_attempts: 3
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8040/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  chromadb:
    image: chromadb/chroma:latest
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER=${CHROMADB_AUTH_PROVIDER:-chromadb.auth.token.TokenConfigServerAuthCredentialsProvider}
      - CHROMA_SERVER_AUTH_TOKEN_TRANSPORT_HEADER=${CHROMADB_TOKEN}
    volumes:
      - chromadb_data:/chroma/chroma
    networks:
      - vector-wave-shared
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7.2-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - vector-wave-shared
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

secrets:
  redis_password:
    external: true
  chromadb_token:
    external: true

networks:
  vector-wave-shared:
    external: true

volumes:
  chromadb_data:
    driver: local
  redis_data:
    driver: local